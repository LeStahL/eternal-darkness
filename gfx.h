/* File generated with Shader Minifier 1.1.5
 * http://www.ctrl-alt-test.fr
 */
#ifndef GFX_H_
# define GFX_H_
# define VAR_IRESOLUTION "i"
# define VAR_ITIME "v"

const char *gfx_frag =
 "#version 130\n"
 "uniform float v;"
 "uniform vec2 i;"
 "const float s=acos(-1.);"
 "const vec3 m=vec3(1.,0.,-1.);"
 "float x;"
 "float f(vec2 m)"
 "{"
   "return-1.+2.*fract(sin(dot(m.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float t(vec3 m)"
 "{"
   "return.33333*(f(m.xy)+f(m.yz)+f(m.zx));"
 "}"
 "float f(vec2 m,vec2 x,vec2 y,vec2 v,float f)"
 "{"
   "return f=clamp(f,0.,1.),length(v-pow(1.-f,2.)*m-2.*(1.-f)*f*x-f*f*y);"
 "}"
 "float f(vec2 v,vec2 x,vec2 y,vec2 i)"
 "{"
   "vec2 a=i-v,o=y-2.*x+v,d=x-v;"
   "vec3 n=vec3(3.*dot(d,o),2.*dot(d,d)-dot(a,o),-dot(a,d))/dot(o,o);"
   "float z=n.x/3.,p=n.y-z*n.x,e=-z*(z*z+p)+n.z,l=e*e/4.+p*p*p/27.;"
   "if(l>0.)"
     "{"
       "vec2 r=-.5*e*m.xx+sqrt(l)*m.xz,c=sign(r)*pow(abs(r),m.xx/3.);"
       "return f(v,x,y,i,c.x+c.y-z);"
     "}"
   "float r=sqrt(-4./3.*p),c=acos(-.5*e*sqrt(-27./p/p/p))/3.;"
   "vec3 t=m.zxz*r*cos(c*m.xxx+m*s/3.)-z;"
   "return min(f(v,x,y,i,t.x),min(f(v,x,y,i,t.y),f(v,x,y,i,t.z)));"
 "}"
 "float f(vec2 v,vec2 m,vec2 x)"
 "{"
   "vec2 y=m-v;"
   "float f=clamp(dot(x-v,y)/dot(y,y),0.,1.);"
   "return length(x-mix(v,m,f));"
 "}"
 "float p(float v)"
 "{"
   "float i=floor(v);"
   "v=fract(v);"
   "float x=f(i*m.xx),y=f((i+1.)*m.xx);"
   "return mix(x,y,smoothstep(0.,1.,v));"
 "}"
 "float n(vec2 v)"
 "{"
   "vec2 x=floor(v);"
   "v=fract(v);"
   "float i=f(x),y=f(x+m.yx),o=f(x+m.xy),s=f(x+m.xx);"
   "return mix(mix(i,y,smoothstep(0.,1.,v.y)),mix(o,s,smoothstep(0.,1.,v.y)),smoothstep(0.,1.,v.x));"
 "}"
 "float n(vec2 x,float v,float y,float m)"
 "{"
   "float i=0.,f=1.2;"
   "for(float r=v;r<y;r=r*2.)"
     "i=f*n(r*x)+i,f=f*m;"
   "return i;"
 "}"
 "float n(vec2 v,float m,float x,float y,float f)"
 "{"
   "float i=length(v),r=acos(v.x/i)*step(0.,v.y)-acos(v.x/i)*step(v.y,0.);"
   "r=clamp(r,y,f);"
   "vec2 z=m*vec2(cos(r),sin(r));"
   "return length(v-z)-x;"
 "}"
 "float p(vec2 v,vec2 x,vec2 m,float y)"
 "{"
   "vec2 f=m-x;"
   "return length(v-mix(x,m,clamp(dot(v-x,f)/dot(f,f),0.,1.)))-y;"
 "}"
 "void f(in int v,out float x,out float y,out vec2 i,out float o,out float r)"
 "{"
   "x=55.*f(float(-v)*m.xx),y=.00012*pow(.9,float(v-1))*f(float(v)*m.xx),i=m.yx*f(float(v)*m.xx)+.3*m.xy*f(float(v)*m.xy),o=pow(.5+.1*f(float(v+1)*m.xx),float(v))*(1.+.2*f(float(v)*m.xx))*700.,r=12.*mod(float(v*3),2.5)*f(vec2(float(v+4)));"
 "}"
 "float f(vec2 v,int y)"
 "{"
   "float i=0.,o,m,s,a;"
   "vec2 r;"
   "for(int d=0;d<y;++d)"
     "{"
       "f(d,o,a,r,m,s);"
       "float e=dot(r,v);"
       "i+=a*sin(m*e+s*x);"
     "}"
   "return i;"
 "}"
 "vec2 r(vec2 v)"
 "{"
   "vec2 x=vec2(p(v,vec2(-.5,-.4),vec2(i.x/i.y,-.4),.05),1.),m=vec2(p(v,vec2(-.5,-.4),vec2(i.x/i.y,-.4),.02),2.);"
   "return mix(x,m,step(1.,m.x));"
 "}"
 "vec2 h(vec3 v)"
 "{"
   "return v+=m.xyy*.05*x,vec2(v.z+.5-.5*n(v.xy,.9,1.,.1)+.05*n(v.xy,120.,180.,1.7),1.);"
 "}"
 "vec2 w(vec3 v)"
 "{"
   "v+=m.xxy*15.+m.yxy*.05*x;"
   "float y=-.5*n(v.xy,.91,2.,.1);"
   "if(v.z>-.19)"
     "y+=.05*n(v.xy,120.,180.,1.7);"
   "vec2 i=vec2(v.z+y,1.),o=vec2(v.z+.21-f(v.xy,22),2.);"
   "return mix(i,o,step(o.x,i.x));"
 "}"
 "vec2 e(vec3 v)"
 "{"
   "v+=m.yxy*.5*x;"
   "vec3 i=vec3(mod(v.x,2.)-1.,mod(v.y,2.)-1.,v.z),o=v-i;"
   "vec2 y=vec2(length(i.xy-.5*vec2(f(o.xy),f(o.xy*1.1)))-.1,1.),r=vec2(v.z-.2*n(v.xy,.9,1.,.1),1.);"
   "float d=-length(max(abs(i)-vec3(1.,2.,50.),0.));"
   "d=abs(d)+.4;"
   "y.x=min(y.x,d);"
   "return mix(r,y,step(y.x,r.x));"
 "}"
 "vec2 a(vec3 v)"
 "{"
   "if(x<20.)"
     "return h(v);"
   "else"
     " if(x<30.)"
       "return w(v);"
     "else"
       " if(x<7000.)"
         "return e(v);"
 "}"
 "const float y=.0001;"
 "vec3 l(vec3 v)"
 "{"
   "float x=a(v).x;"
   "return normalize(vec3(a(v+y*m.xyy).x-x,a(v+y*m.yxy).x-x,a(v+y*m.yyx).x-x));"
 "}"
 "vec3 d(vec2 v)"
 "{"
   "if(x<20.)"
     "{"
       "v+=.01*x*m.yx;"
       "vec2 i=mod(v,.05)-.025,y=v-i;"
       "float o=.17*exp(-.2*x);"
       "return.15*m.xxx+mix(.4*m.xyy,.8*m.xxy,1.-2.*v.y-length(v))*exp(-.2*x)+m.xxx*smoothstep(o+.01,o-.01,length(v))+2.*tanh(.2*x)*smoothstep(.003,-.003,length(i-.02*vec2(f(y),f(.1*y+.1*m.xx)))-.002*f(.1*y))*(.2*vec3(f(.1*y),f(.1*y+.1*m.xx),f(y+.3*m.xx))+.8)+(.4+.2*n(v+cos(.5*x)*sin(.5*v.x)*sin(.6*v.y),2.5,100.,.55))*exp(-.05*x);"
     "}"
   "else"
     " return m.xxx;"
 "}"
 "float o(float x)"
 "{"
   "return smoothstep(x-2.,x-1.,v)*(1.-smoothstep(x+2.,x+3.,v));"
 "}"
 "void a(out vec4 f,in vec2 y,float i)"
 "{"
   "x=i;"
   "vec2 r;"
   "vec3 s,o=.5+.5*n(m.yy,.9,1.,.1)-m.yxy+.5*m.yyx,c=.25*m.yyx,p=m.xyy,e=m.yyx,t=c+p*y.x+e*y.y,z=normalize(t-o);"
   "float h=0.,g=0.,w=0.,b=15.;"
   "if(i>20.)"
     "b=55.;"
   "for(int u=0;u<100;++u)"
     "{"
       "s=o+h*z;"
       "r=a(s);"
       "if(r.x<.0005)"
         "break;"
       "if(h>b||u==99)"
         "{"
           "f=vec4(d(y),1.);"
           "return;"
         "}"
       "h+=r.x;"
     "}"
   "vec3 u=l(s),q=m.yxy,F=s+m.yyx,C=normalize(s-o),k=normalize(reflect(-q,u)),Z=normalize(reflect(-F,u)),Y;"
   "if(r.y==1.)"
     "Y=.01*m.xyy*dot(q,u)+.2*m.xxx*pow(abs(dot(k,C)),4.)+(.05*m.xyy+.05*m.yxy)*pow(abs(dot(k,C)),2.),Y*=exp(-.2*v);"
   "else"
     " if(r.y==2.)"
       "Y=.4*m.xxx*dot(F,u)+.2*m.xxx*pow(abs(dot(Z,C)),2.);"
     "else"
       " Y=m.yyy;"
   "if(i<20.)"
     "Y=mix(Y,.15*m.xxx,cosh(-2.*s.z)*tanh(.109*s.y));"
   "else"
     " Y=mix(Y,m.xxx,tanh(.1*s.y));"
   "f=vec4(Y,1.);"
 "}"
 "void a(out vec4 y,in vec2 n)"
 "{"
   "vec2 d=n/i.yy-.5,c;"
   "vec4 z,u,t;"
   "a(z,d,v);"
   "a(u,d,v+.01);"
   "y=.333*(z+u);"
   "vec3 Y=y.xyz;"
   "c=r(d);"
   "float l=step(c.x,0.);"
   "if(c.y==1.)"
     "Y=mix(Y,mix(Y,m.xxx,.1),l);"
   "vec2 p=d+(.01*v-.12)*m.yx;"
   "float e=atan(abs(p.y/p.x)),C=length(p);"
   "Y+=1.4*(.5+.25*sin(2.3*s*e)+.25*sin(4.*s*e)+.25*sin(1.5*s*e))*exp(-3.*C)*m.xxx*exp(-.9*x)*(1.-smoothstep(1.4,1.6,v));"
   "float k=1.;"
   "if(v<8.)"
     "{"
       "const vec2 h[84]=vec2[84](vec2(-.388,-.415),vec2(-.388,-.368),vec2(-.4,-.368),vec2(-.377,-.368),vec2(-.353,-.415),vec2(-.341,-.415),vec2(-.364,-.403),vec2(-.341,-.403),vec2(-.305,-.415),vec2(-.305,-.392),vec2(-.293,-.415),vec2(-.293,-.392),vec2(-.27,-.415),vec2(-.27,-.403),vec2(-.247,-.415),vec2(-.247,-.403),vec2(-.234,-.415),vec2(-.211,-.415),vec2(-.199,-.38),vec2(-.187,-.368),vec2(-.187,-.368),vec2(-.187,-.415),vec2(-.175,-.403),vec2(-.175,-.38),vec2(-.151,-.403),vec2(-.151,-.38),vec2(-.115,-.438),vec2(-.115,-.392),vec2(-.115,-.392),vec2(-.104,-.392),vec2(-.115,-.415),vec2(-.104,-.415),vec2(-.0797,-.415),vec2(-.0797,-.392),vec2(-.0202,-.392),vec2(-.0202,-.403),vec2(.00308,-.392),vec2(.00308,-.415),vec2(.027,-.392),vec2(.0387,-.392),vec2(.027,-.415),vec2(.0387,-.415),vec2(.0387,-.415),vec2(.0387,-.368),vec2(.0509,-.403),vec2(.0509,-.368),vec2(.0748,-.392),vec2(.0748,-.403),vec2(.0982,-.392),vec2(.0982,-.427),vec2(.0865,-.438),vec2(.0748,-.438),vec2(.134,-.438),vec2(.134,-.392),vec2(.134,-.392),vec2(.146,-.392),vec2(.134,-.415),vec2(.146,-.415),vec2(.17,-.415),vec2(.17,-.392),vec2(.206,-.415),vec2(.217,-.415),vec2(.194,-.403),vec2(.217,-.403),vec2(.229,-.415),vec2(.241,-.415),vec2(.241,-.392),vec2(.253,-.392),vec2(.277,-.415),vec2(.288,-.415),vec2(.265,-.403),vec2(.288,-.403),vec2(.301,-.415),vec2(.301,-.392),vec2(.324,-.403),vec2(.324,-.415),vec2(.348,-.403),vec2(.348,-.368),vec2(.336,-.392),vec2(.36,-.392),vec2(.372,-.415),vec2(.383,-.415),vec2(.383,-.392),vec2(.395,-.392)),g[141]=vec2[141](vec2(-.341,-.403),vec2(-.341,-.392),vec2(-.353,-.392),vec2(-.353,-.392),vec2(-.364,-.392),vec2(-.364,-.403),vec2(-.364,-.403),vec2(-.364,-.415),vec2(-.353,-.415),vec2(-.317,-.392),vec2(-.329,-.392),vec2(-.329,-.403),vec2(-.329,-.403),vec2(-.329,-.415),vec2(-.317,-.415),vec2(-.317,-.415),vec2(-.305,-.415),vec2(-.305,-.403),vec2(-.317,-.392),vec2(-.305,-.392),vec2(-.305,-.403),vec2(-.293,-.403),vec2(-.293,-.392),vec2(-.282,-.392),vec2(-.282,-.392),vec2(-.27,-.392),vec2(-.27,-.403),vec2(-.27,-.403),vec2(-.27,-.392),vec2(-.258,-.392),vec2(-.258,-.392),vec2(-.247,-.392),vec2(-.247,-.403),vec2(-.234,-.368),vec2(-.199,-.357),vec2(-.234,-.415),vec2(-.175,-.403),vec2(-.175,-.415),vec2(-.163,-.415),vec2(-.163,-.415),vec2(-.151,-.415),vec2(-.151,-.403),vec2(-.151,-.38),vec2(-.151,-.368),vec2(-.163,-.368),vec2(-.163,-.368),vec2(-.175,-.368),vec2(-.175,-.38),vec2(-.104,-.415),vec2(-.092,-.415),vec2(-.092,-.403),vec2(-.092,-.403),vec2(-.092,-.392),vec2(-.104,-.392),vec2(-.0797,-.403),vec2(-.0797,-.392),vec2(-.0681,-.392),vec2(-.0442,-.415),vec2(-.0558,-.415),vec2(-.0558,-.403),vec2(-.0558,-.403),vec2(-.0558,-.392),vec2(-.0442,-.392),vec2(-.0442,-.392),vec2(-.0325,-.392),vec2(-.0325,-.403),vec2(-.0325,-.403),vec2(-.0325,-.415),vec2(-.0442,-.415),vec2(-.0202,-.403),vec2(-.0202,-.415),vec2(-.00858,-.415),vec2(-.00858,-.415),vec2(.00308,-.415),vec2(.00308,-.403),vec2(.027,-.415),vec2(.0153,-.415),vec2(.0153,-.403),vec2(.0153,-.403),vec2(.0153,-.392),vec2(.027,-.392),vec2(.0509,-.403),vec2(.0509,-.415),vec2(.0626,-.415),vec2(.0748,-.403),vec2(.0748,-.415),vec2(.0865,-.415),vec2(.0865,-.415),vec2(.0982,-.415),vec2(.0982,-.403),vec2(.0982,-.427),vec2(.0982,-.438),vec2(.0865,-.438),vec2(.146,-.415),vec2(.158,-.415),vec2(.158,-.403),vec2(.158,-.403),vec2(.158,-.392),vec2(.146,-.392),vec2(.17,-.403),vec2(.17,-.392),vec2(.182,-.392),vec2(.217,-.403),vec2(.217,-.392),vec2(.206,-.392),vec2(.206,-.392),vec2(.194,-.392),vec2(.194,-.403),vec2(.194,-.403),vec2(.194,-.415),vec2(.206,-.415),vec2(.241,-.415),vec2(.264,-.409),vec2(.241,-.403),vec2(.241,-.403),vec2(.218,-.398),vec2(.241,-.392),vec2(.288,-.403),vec2(.288,-.392),vec2(.277,-.392),vec2(.277,-.392),vec2(.265,-.392),vec2(.265,-.403),vec2(.265,-.403),vec2(.265,-.415),vec2(.277,-.415),vec2(.312,-.392),vec2(.324,-.392),vec2(.324,-.403),vec2(.301,-.403),vec2(.301,-.392),vec2(.312,-.392),vec2(.348,-.403),vec2(.348,-.415),vec2(.36,-.415),vec2(.383,-.415),vec2(.407,-.409),vec2(.383,-.403),vec2(.383,-.403),vec2(.36,-.398),vec2(.383,-.392));"
       "for(int w=0;w<42;++w)"
         "k=min(k,f(h[2*w],h[2*w+1],d));"
       "for(int w=0;w<47;++w)"
         "k=min(k,f(g[3*w],g[3*w+1],g[3*w+2],d));"
       "Y=mix(Y,.8*m.xxx,o(5.)*smoothstep(.005,.002,k));"
     "}"
   "else"
     " if(v<13.)"
       "{"
         "const vec2 g[58]=vec2[58](vec2(-.399,-.415),vec2(-.399,-.368),vec2(-.399,-.415),vec2(-.376,-.415),vec2(-.399,-.392),vec2(-.376,-.392),vec2(-.399,-.368),vec2(-.376,-.368),vec2(-.352,-.403),vec2(-.352,-.368),vec2(-.364,-.392),vec2(-.341,-.392),vec2(-.317,-.415),vec2(-.305,-.415),vec2(-.328,-.403),vec2(-.305,-.403),vec2(-.293,-.415),vec2(-.293,-.392),vec2(-.269,-.415),vec2(-.269,-.392),vec2(-.245,-.403),vec2(-.245,-.415),vec2(-.21,-.415),vec2(-.21,-.392),vec2(-.198,-.403),vec2(-.198,-.368),vec2(-.15,-.415),vec2(-.15,-.368),vec2(-.15,-.368),vec2(-.138,-.368),vec2(-.15,-.415),vec2(-.138,-.415),vec2(-.126,-.403),vec2(-.126,-.38),vec2(-.0908,-.415),vec2(-.0908,-.392),vec2(-.0786,-.415),vec2(-.0786,-.392),vec2(-.0547,-.415),vec2(-.0547,-.368),vec2(-.0547,-.403),vec2(-.043,-.403),vec2(-.0191,-.415),vec2(-.0191,-.392),vec2(.00425,-.403),vec2(.00425,-.415),vec2(.0282,-.415),vec2(.0398,-.415),vec2(.0165,-.403),vec2(.0398,-.403),vec2(.0521,-.415),vec2(.0638,-.415),vec2(.0638,-.392),vec2(.0754,-.392),vec2(.0877,-.415),vec2(.0993,-.415),vec2(.0993,-.392),vec2(.111,-.392)),h[90]=vec2[90](vec2(-.352,-.403),vec2(-.352,-.415),vec2(-.341,-.415),vec2(-.305,-.403),vec2(-.305,-.392),vec2(-.317,-.392),vec2(-.317,-.392),vec2(-.328,-.392),vec2(-.328,-.403),vec2(-.328,-.403),vec2(-.328,-.415),vec2(-.317,-.415),vec2(-.293,-.403),vec2(-.293,-.392),vec2(-.281,-.392),vec2(-.257,-.392),vec2(-.245,-.392),vec2(-.245,-.403),vec2(-.269,-.403),vec2(-.269,-.392),vec2(-.257,-.392),vec2(-.222,-.392),vec2(-.233,-.392),vec2(-.233,-.403),vec2(-.233,-.403),vec2(-.233,-.415),vec2(-.222,-.415),vec2(-.222,-.415),vec2(-.21,-.415),vec2(-.21,-.403),vec2(-.222,-.392),vec2(-.21,-.392),vec2(-.21,-.403),vec2(-.198,-.403),vec2(-.198,-.415),vec2(-.186,-.415),vec2(-.138,-.368),vec2(-.126,-.368),vec2(-.126,-.38),vec2(-.138,-.415),vec2(-.126,-.415),vec2(-.126,-.403),vec2(-.102,-.392),vec2(-.114,-.392),vec2(-.114,-.403),vec2(-.114,-.403),vec2(-.114,-.415),vec2(-.102,-.415),vec2(-.102,-.415),vec2(-.0908,-.415),vec2(-.0908,-.403),vec2(-.102,-.392),vec2(-.0908,-.392),vec2(-.0908,-.403),vec2(-.0786,-.403),vec2(-.0786,-.392),vec2(-.0669,-.392),vec2(-.043,-.403),vec2(-.0313,-.403),vec2(-.0313,-.392),vec2(-.043,-.403),vec2(-.0313,-.403),vec2(-.0313,-.415),vec2(-.00742,-.392),vec2(.00425,-.392),vec2(.00425,-.403),vec2(-.0191,-.403),vec2(-.0191,-.392),vec2(-.00742,-.392),vec2(.0398,-.403),vec2(.0398,-.392),vec2(.0282,-.392),vec2(.0282,-.392),vec2(.0165,-.392),vec2(.0165,-.403),vec2(.0165,-.403),vec2(.0165,-.415),vec2(.0282,-.415),vec2(.0638,-.415),vec2(.0871,-.409),vec2(.0638,-.403),vec2(.0638,-.403),vec2(.0404,-.398),vec2(.0638,-.392),vec2(.0993,-.415),vec2(.123,-.409),vec2(.0993,-.403),vec2(.0993,-.403),vec2(.076,-.398),vec2(.0993,-.392));"
         "for(int w=0;w<29;++w)"
           "k=min(k,f(g[2*w],g[2*w+1],d));"
         "for(int w=0;w<30;++w)"
           "k=min(k,f(h[3*w],h[3*w+1],h[3*w+2],d));"
         "Y=mix(Y,.8*m.xxx,o(10.)*smoothstep(.005,.002,k));"
       "}"
     "else"
       " if(v<18.)"
         "{"
           "const vec2 h[18]=vec2[18](vec2(-.4,-.368),vec2(-.4,-.403),vec2(-.377,-.368),vec2(-.377,-.403),vec2(-.353,-.368),vec2(-.353,-.403),vec2(-.329,-.415),vec2(-.318,-.415),vec2(-.341,-.403),vec2(-.318,-.403),vec2(-.258,-.415),vec2(-.258,-.392),vec2(-.246,-.415),vec2(-.246,-.392),vec2(-.21,-.415),vec2(-.199,-.415),vec2(-.222,-.403),vec2(-.199,-.403)),g[45]=vec2[45](vec2(-.4,-.403),vec2(-.4,-.415),vec2(-.388,-.415),vec2(-.388,-.415),vec2(-.377,-.415),vec2(-.377,-.403),vec2(-.377,-.403),vec2(-.377,-.415),vec2(-.365,-.415),vec2(-.365,-.415),vec2(-.353,-.415),vec2(-.353,-.403),vec2(-.318,-.403),vec2(-.318,-.392),vec2(-.329,-.392),vec2(-.329,-.392),vec2(-.341,-.392),vec2(-.341,-.403),vec2(-.341,-.403),vec2(-.341,-.415),vec2(-.329,-.415),vec2(-.27,-.392),vec2(-.282,-.392),vec2(-.282,-.403),vec2(-.282,-.403),vec2(-.282,-.415),vec2(-.27,-.415),vec2(-.27,-.415),vec2(-.258,-.415),vec2(-.258,-.403),vec2(-.27,-.392),vec2(-.258,-.392),vec2(-.258,-.403),vec2(-.246,-.403),vec2(-.246,-.392),vec2(-.234,-.392),vec2(-.199,-.403),vec2(-.199,-.392),vec2(-.21,-.392),vec2(-.21,-.392),vec2(-.222,-.392),vec2(-.222,-.403),vec2(-.222,-.403),vec2(-.222,-.415),vec2(-.21,-.415));"
           "for(int w=0;w<9;++w)"
             "k=min(k,f(h[2*w],h[2*w+1],d));"
           "for(int w=0;w<15;++w)"
             "k=min(k,f(g[3*w],g[3*w+1],g[3*w+2],d));"
           "Y=mix(Y,.8*m.xxx,o(15.)*smoothstep(.005,.002,k));"
         "}"
       "else"
         " if(v<23.)"
           "{"
             "const vec2 g[128]=vec2[128](vec2(-.4,-.403),vec2(-.4,-.38),vec2(-.377,-.403),vec2(-.377,-.38),vec2(-.364,-.415),vec2(-.364,-.368),vec2(-.318,-.415),vec2(-.318,-.368),vec2(-.364,-.368),vec2(-.341,-.392),vec2(-.341,-.392),vec2(-.318,-.368),vec2(-.282,-.403),vec2(-.282,-.403),vec2(-.282,-.38),vec2(-.282,-.38),vec2(-.269,-.403),vec2(-.269,-.403),vec2(-.269,-.38),vec2(-.269,-.38),vec2(-.21,-.415),vec2(-.221,-.415),vec2(-.21,-.368),vec2(-.221,-.368),vec2(-.233,-.403),vec2(-.233,-.38),vec2(-.15,-.392),vec2(-.139,-.392),vec2(-.15,-.415),vec2(-.139,-.415),vec2(-.139,-.415),vec2(-.139,-.368),vec2(-.115,-.415),vec2(-.103,-.415),vec2(-.126,-.403),vec2(-.103,-.403),vec2(-.0908,-.415),vec2(-.0675,-.368),vec2(-.0552,-.415),vec2(-.0436,-.415),vec2(-.0319,-.368),vec2(-.0436,-.368),vec2(-.0197,-.415),vec2(-.0197,-.368),vec2(-.0197,-.368),vec2(.00367,-.368),vec2(-.0197,-.392),vec2(.00367,-.392),vec2(.0159,-.415),vec2(.0393,-.368),vec2(.0159,-.368),vec2(.0393,-.415),vec2(.0988,-.415),vec2(.0988,-.392),vec2(.111,-.415),vec2(.111,-.392),vec2(.134,-.403),vec2(.134,-.415),vec2(.158,-.392),vec2(.17,-.392),vec2(.158,-.415),vec2(.17,-.415),vec2(.17,-.415),vec2(.17,-.368),vec2(.206,-.415),vec2(.206,-.368),vec2(.206,-.368),vec2(.229,-.415),vec2(.229,-.415),vec2(.229,-.368),vec2(.242,-.415),vec2(.242,-.368),vec2(.242,-.368),vec2(.253,-.368),vec2(.242,-.392),vec2(.253,-.392),vec2(.265,-.403),vec2(.265,-.415),vec2(.301,-.368),vec2(.277,-.403),vec2(.277,-.403),vec2(.301,-.403),vec2(.301,-.392),vec2(.301,-.415),vec2(.337,-.403),vec2(.337,-.403),vec2(.337,-.38),vec2(.337,-.38),vec2(.349,-.403),vec2(.349,-.403),vec2(.349,-.38),vec2(.349,-.38),vec2(.409,-.415),vec2(.397,-.415),vec2(.409,-.368),vec2(.397,-.368),vec2(.385,-.403),vec2(.385,-.38),vec2(.468,-.392),vec2(.48,-.392),vec2(.468,-.415),vec2(.48,-.415),vec2(.48,-.415),vec2(.48,-.368),vec2(.504,-.415),vec2(.515,-.415),vec2(.492,-.403),vec2(.515,-.403),vec2(.527,-.415),vec2(.551,-.368),vec2(.575,-.392),vec2(.586,-.392),vec2(.586,-.392),vec2(.586,-.403),vec2(.563,-.403),vec2(.563,-.38),vec2(.575,-.368),vec2(.586,-.368),vec2(.599,-.415),vec2(.599,-.368),vec2(.599,-.368),vec2(.622,-.368),vec2(.599,-.392),vec2(.622,-.392),vec2(.634,-.415),vec2(.658,-.368),vec2(.634,-.368),vec2(.658,-.415)),h[135]=vec2[135](vec2(-.4,-.403),vec2(-.4,-.415),vec2(-.388,-.415),vec2(-.388,-.415),vec2(-.377,-.415),vec2(-.377,-.403),vec2(-.377,-.38),vec2(-.377,-.368),vec2(-.388,-.368),vec2(-.388,-.368),vec2(-.4,-.368),vec2(-.4,-.38),vec2(-.388,-.403),vec2(-.388,-.415),vec2(-.377,-.415),vec2(-.221,-.415),vec2(-.233,-.415),vec2(-.233,-.403),vec2(-.233,-.38),vec2(-.233,-.368),vec2(-.221,-.368),vec2(-.186,-.415),vec2(-.198,-.415),vec2(-.198,-.403),vec2(-.198,-.403),vec2(-.198,-.392),vec2(-.186,-.392),vec2(-.186,-.392),vec2(-.174,-.392),vec2(-.174,-.403),vec2(-.174,-.403),vec2(-.174,-.415),vec2(-.186,-.415),vec2(-.15,-.415),vec2(-.162,-.415),vec2(-.162,-.403),vec2(-.162,-.403),vec2(-.162,-.392),vec2(-.15,-.392),vec2(-.103,-.403),vec2(-.103,-.392),vec2(-.115,-.392),vec2(-.115,-.392),vec2(-.126,-.392),vec2(-.126,-.403),vec2(-.126,-.403),vec2(-.126,-.415),vec2(-.115,-.415),vec2(-.0436,-.415),vec2(-.0319,-.415),vec2(-.0319,-.403),vec2(-.0319,-.403),vec2(-.0319,-.392),vec2(-.0436,-.392),vec2(-.0436,-.392),vec2(-.0552,-.392),vec2(-.0552,-.38),vec2(-.0552,-.38),vec2(-.0552,-.368),vec2(-.0436,-.368),vec2(.0871,-.392),vec2(.0754,-.392),vec2(.0754,-.403),vec2(.0754,-.403),vec2(.0754,-.415),vec2(.0871,-.415),vec2(.0871,-.415),vec2(.0988,-.415),vec2(.0988,-.403),vec2(.0871,-.392),vec2(.0988,-.392),vec2(.0988,-.403),vec2(.123,-.392),vec2(.134,-.392),vec2(.134,-.403),vec2(.111,-.403),vec2(.111,-.392),vec2(.123,-.392),vec2(.158,-.415),vec2(.147,-.415),vec2(.147,-.403),vec2(.147,-.403),vec2(.147,-.392),vec2(.158,-.392),vec2(.253,-.368),vec2(.265,-.368),vec2(.265,-.38),vec2(.265,-.38),vec2(.265,-.392),vec2(.253,-.392),vec2(.253,-.392),vec2(.265,-.392),vec2(.265,-.403),vec2(.397,-.415),vec2(.385,-.415),vec2(.385,-.403),vec2(.385,-.38),vec2(.385,-.368),vec2(.397,-.368),vec2(.432,-.415),vec2(.421,-.415),vec2(.421,-.403),vec2(.421,-.403),vec2(.421,-.392),vec2(.432,-.392),vec2(.432,-.392),vec2(.444,-.392),vec2(.444,-.403),vec2(.444,-.403),vec2(.444,-.415),vec2(.432,-.415),vec2(.468,-.415),vec2(.456,-.415),vec2(.456,-.403),vec2(.456,-.403),vec2(.456,-.392),vec2(.468,-.392),vec2(.515,-.403),vec2(.515,-.392),vec2(.504,-.392),vec2(.504,-.392),vec2(.492,-.392),vec2(.492,-.403),vec2(.492,-.403),vec2(.492,-.415),vec2(.504,-.415),vec2(.563,-.38),vec2(.563,-.368),vec2(.575,-.368),vec2(.575,-.415),vec2(.563,-.415),vec2(.563,-.403),vec2(.575,-.415),vec2(.586,-.415),vec2(.586,-.403));"
             "for(int w=0;w<64;++w)"
               "k=min(k,f(g[2*w],g[2*w+1],d));"
             "for(int w=0;w<45;++w)"
               "k=min(k,f(h[3*w],h[3*w+1],h[3*w+2],d));"
             "Y=mix(Y,.8*m.xxx,o(20.)*smoothstep(.005,.002,k));"
           "}"
         "else"
           " if(v<28.)"
             "{"
               "const vec2 h[24]=vec2[24](vec2(-.4,-.368),vec2(-.4,-.403),vec2(-.377,-.368),vec2(-.377,-.403),vec2(-.353,-.368),vec2(-.353,-.403),vec2(-.329,-.415),vec2(-.318,-.415),vec2(-.341,-.403),vec2(-.318,-.403),vec2(-.282,-.403),vec2(-.282,-.368),vec2(-.258,-.403),vec2(-.258,-.392),vec2(-.258,-.38),vec2(-.258,-.38),vec2(-.234,-.415),vec2(-.234,-.368),vec2(-.234,-.403),vec2(-.222,-.403),vec2(-.186,-.415),vec2(-.175,-.415),vec2(-.198,-.403),vec2(-.175,-.403)),g[42]=vec2[42](vec2(-.4,-.403),vec2(-.4,-.415),vec2(-.388,-.415),vec2(-.388,-.415),vec2(-.377,-.415),vec2(-.377,-.403),vec2(-.377,-.403),vec2(-.377,-.415),vec2(-.365,-.415),vec2(-.365,-.415),vec2(-.353,-.415),vec2(-.353,-.403),vec2(-.318,-.403),vec2(-.318,-.392),vec2(-.329,-.392),vec2(-.329,-.392),vec2(-.341,-.392),vec2(-.341,-.403),vec2(-.341,-.403),vec2(-.341,-.415),vec2(-.329,-.415),vec2(-.282,-.403),vec2(-.282,-.415),vec2(-.27,-.415),vec2(-.258,-.403),vec2(-.258,-.415),vec2(-.246,-.415),vec2(-.222,-.403),vec2(-.21,-.403),vec2(-.21,-.392),vec2(-.222,-.403),vec2(-.21,-.403),vec2(-.21,-.415),vec2(-.175,-.403),vec2(-.175,-.392),vec2(-.186,-.392),vec2(-.186,-.392),vec2(-.198,-.392),vec2(-.198,-.403),vec2(-.198,-.403),vec2(-.198,-.415),vec2(-.186,-.415));"
               "for(int w=0;w<12;++w)"
                 "k=min(k,f(h[2*w],h[2*w+1],d));"
               "for(int w=0;w<14;++w)"
                 "k=min(k,f(g[3*w],g[3*w+1],g[3*w+2],d));"
               "Y=mix(Y,.8*m.xxx,o(25.)*smoothstep(.005,.002,k));"
             "}"
           "else"
             " if(v<33.)"
               "{"
                 "const vec2 g[176]=vec2[176](vec2(-.4,-.415),vec2(-.4,-.38),vec2(-.377,-.415),vec2(-.377,-.38),vec2(-.4,-.392),vec2(-.377,-.392),vec2(-.364,-.415),vec2(-.364,-.368),vec2(-.364,-.368),vec2(-.341,-.415),vec2(-.341,-.415),vec2(-.341,-.368),vec2(-.329,-.415),vec2(-.329,-.368),vec2(-.329,-.368),vec2(-.317,-.368),vec2(-.329,-.415),vec2(-.317,-.415),vec2(-.305,-.403),vec2(-.305,-.38),vec2(-.269,-.403),vec2(-.269,-.403),vec2(-.269,-.38),vec2(-.269,-.38),vec2(-.257,-.403),vec2(-.257,-.403),vec2(-.257,-.38),vec2(-.257,-.38),vec2(-.221,-.415),vec2(-.221,-.392),vec2(-.174,-.392),vec2(-.174,-.427),vec2(-.185,-.438),vec2(-.197,-.438),vec2(-.161,-.415),vec2(-.161,-.368),vec2(-.161,-.415),vec2(-.15,-.415),vec2(-.161,-.392),vec2(-.15,-.392),vec2(-.102,-.415),vec2(-.102,-.392),vec2(-.0663,-.403),vec2(-.0663,-.403),vec2(-.0663,-.38),vec2(-.0663,-.38),vec2(-.0541,-.403),vec2(-.0541,-.403),vec2(-.0541,-.38),vec2(-.0541,-.38),vec2(-.00625,-.403),vec2(-.00625,-.38),vec2(-.0179,-.392),vec2(.00542,-.392),vec2(.041,-.415),vec2(.041,-.392),vec2(.0533,-.415),vec2(.0533,-.392),vec2(.0772,-.415),vec2(.0772,-.368),vec2(.0772,-.415),vec2(.0888,-.415),vec2(.0772,-.392),vec2(.0888,-.392),vec2(.113,-.415),vec2(.113,-.392),vec2(.16,-.415),vec2(.16,-.392),vec2(.172,-.392),vec2(.172,-.403),vec2(.196,-.392),vec2(.196,-.415),vec2(.208,-.415),vec2(.22,-.415),vec2(.22,-.392),vec2(.231,-.392),vec2(.267,-.392),vec2(.255,-.392),vec2(.267,-.415),vec2(.255,-.415),vec2(.279,-.415),vec2(.279,-.368),vec2(.302,-.415),vec2(.302,-.403),vec2(.291,-.392),vec2(.279,-.392),vec2(.339,-.403),vec2(.339,-.403),vec2(.339,-.38),vec2(.339,-.38),vec2(.351,-.403),vec2(.351,-.403),vec2(.351,-.38),vec2(.351,-.38),vec2(.387,-.415),vec2(.387,-.392),vec2(.41,-.415),vec2(.41,-.403),vec2(.434,-.415),vec2(.434,-.403),vec2(.458,-.415),vec2(.469,-.415),vec2(.446,-.403),vec2(.469,-.403),vec2(.481,-.415),vec2(.481,-.392),vec2(.529,-.392),vec2(.517,-.392),vec2(.529,-.415),vec2(.517,-.415),vec2(.541,-.392),vec2(.541,-.403),vec2(.564,-.392),vec2(.564,-.415),vec2(.577,-.415),vec2(.577,-.392),vec2(.6,-.392),vec2(.6,-.403),vec2(.624,-.392),vec2(.624,-.427),vec2(.612,-.438),vec2(.6,-.438),vec2(.66,-.403),vec2(.66,-.403),vec2(.66,-.38),vec2(.66,-.38),vec2(.672,-.403),vec2(.672,-.403),vec2(.672,-.38),vec2(.672,-.38),vec2(.732,-.415),vec2(.72,-.415),vec2(.732,-.368),vec2(.72,-.368),vec2(.708,-.403),vec2(.708,-.38),vec2(.756,-.403),vec2(.756,-.368),vec2(.744,-.392),vec2(.767,-.392),vec2(.779,-.415),vec2(.779,-.392),vec2(.803,-.403),vec2(.803,-.368),vec2(.827,-.392),vec2(.851,-.392),vec2(.863,-.415),vec2(.863,-.38),vec2(.886,-.415),vec2(.886,-.38),vec2(.863,-.392),vec2(.886,-.392),vec2(.898,-.403),vec2(.898,-.368),vec2(.934,-.403),vec2(.934,-.368),vec2(.922,-.392),vec2(.946,-.392),vec2(.958,-.392),vec2(.981,-.392),vec2(1.01,-.415),vec2(1.01,-.368),vec2(.994,-.368),vec2(1.02,-.368),vec2(1.04,-.415),vec2(1.05,-.415),vec2(1.03,-.403),vec2(1.05,-.403),vec2(1.06,-.415),vec2(1.08,-.415),vec2(1.08,-.392),vec2(1.09,-.392),vec2(1.11,-.403),vec2(1.11,-.368),vec2(1.1,-.392),vec2(1.12,-.392)),h[204]=vec2[204](vec2(-.377,-.38),vec2(-.377,-.368),vec2(-.388,-.368),vec2(-.388,-.368),vec2(-.4,-.368),vec2(-.4,-.38),vec2(-.317,-.368),vec2(-.305,-.368),vec2(-.305,-.38),vec2(-.317,-.415),vec2(-.305,-.415),vec2(-.305,-.403),vec2(-.221,-.403),vec2(-.221,-.392),vec2(-.209,-.392),vec2(-.174,-.403),vec2(-.174,-.392),vec2(-.185,-.392),vec2(-.185,-.392),vec2(-.197,-.392),vec2(-.197,-.403),vec2(-.197,-.403),vec2(-.197,-.415),vec2(-.185,-.415),vec2(-.185,-.415),vec2(-.174,-.415),vec2(-.174,-.403),vec2(-.174,-.427),vec2(-.174,-.438),vec2(-.185,-.438),vec2(-.15,-.415),vec2(-.138,-.415),vec2(-.138,-.403),vec2(-.138,-.403),vec2(-.138,-.392),vec2(-.15,-.392),vec2(-.114,-.392),vec2(-.126,-.392),vec2(-.126,-.403),vec2(-.126,-.403),vec2(-.126,-.415),vec2(-.114,-.415),vec2(-.114,-.415),vec2(-.102,-.415),vec2(-.102,-.403),vec2(-.114,-.392),vec2(-.102,-.392),vec2(-.102,-.403),vec2(-.0179,-.415),vec2(-.00625,-.415),vec2(-.00625,-.403),vec2(-.00625,-.38),vec2(-.00625,-.368),vec2(.00542,-.368),vec2(.0293,-.392),vec2(.0177,-.392),vec2(.0177,-.403),vec2(.0177,-.403),vec2(.0177,-.415),vec2(.0293,-.415),vec2(.0293,-.415),vec2(.041,-.415),vec2(.041,-.403),vec2(.0293,-.392),vec2(.041,-.392),vec2(.041,-.403),vec2(.0533,-.403),vec2(.0533,-.392),vec2(.0649,-.392),vec2(.0888,-.415),vec2(.101,-.415),vec2(.101,-.403),vec2(.101,-.403),vec2(.101,-.392),vec2(.0888,-.392),vec2(.113,-.403),vec2(.113,-.392),vec2(.124,-.392),vec2(.148,-.392),vec2(.137,-.392),vec2(.137,-.403),vec2(.137,-.403),vec2(.137,-.415),vec2(.148,-.415),vec2(.148,-.415),vec2(.16,-.415),vec2(.16,-.403),vec2(.148,-.392),vec2(.16,-.392),vec2(.16,-.403),vec2(.172,-.403),vec2(.172,-.415),vec2(.184,-.415),vec2(.184,-.415),vec2(.196,-.415),vec2(.196,-.403),vec2(.22,-.415),vec2(.243,-.409),vec2(.22,-.403),vec2(.22,-.403),vec2(.196,-.398),vec2(.22,-.392),vec2(.255,-.392),vec2(.243,-.392),vec2(.243,-.403),vec2(.243,-.403),vec2(.243,-.415),vec2(.255,-.415),vec2(.302,-.403),vec2(.302,-.392),vec2(.291,-.392),vec2(.387,-.403),vec2(.387,-.392),vec2(.399,-.392),vec2(.399,-.392),vec2(.41,-.392),vec2(.41,-.403),vec2(.41,-.403),vec2(.41,-.392),vec2(.422,-.392),vec2(.422,-.392),vec2(.434,-.392),vec2(.434,-.403),vec2(.469,-.403),vec2(.469,-.392),vec2(.458,-.392),vec2(.458,-.392),vec2(.446,-.392),vec2(.446,-.403),vec2(.446,-.403),vec2(.446,-.415),vec2(.458,-.415),vec2(.481,-.403),vec2(.481,-.392),vec2(.493,-.392),vec2(.517,-.392),vec2(.505,-.392),vec2(.505,-.403),vec2(.505,-.403),vec2(.505,-.415),vec2(.517,-.415),vec2(.541,-.403),vec2(.541,-.415),vec2(.553,-.415),vec2(.553,-.415),vec2(.564,-.415),vec2(.564,-.403),vec2(.577,-.403),vec2(.577,-.392),vec2(.588,-.392),vec2(.6,-.403),vec2(.6,-.415),vec2(.612,-.415),vec2(.612,-.415),vec2(.624,-.415),vec2(.624,-.403),vec2(.624,-.427),vec2(.624,-.438),vec2(.612,-.438),vec2(.72,-.415),vec2(.708,-.415),vec2(.708,-.403),vec2(.708,-.38),vec2(.708,-.368),vec2(.72,-.368),vec2(.756,-.403),vec2(.756,-.415),vec2(.767,-.415),vec2(.779,-.403),vec2(.779,-.392),vec2(.791,-.392),vec2(.803,-.403),vec2(.803,-.415),vec2(.815,-.415),vec2(.886,-.38),vec2(.886,-.368),vec2(.875,-.368),vec2(.875,-.368),vec2(.863,-.368),vec2(.863,-.38),vec2(.898,-.403),vec2(.898,-.415),vec2(.91,-.415),vec2(.934,-.403),vec2(.934,-.415),vec2(.946,-.415),vec2(1.05,-.403),vec2(1.05,-.392),vec2(1.04,-.392),vec2(1.04,-.392),vec2(1.03,-.392),vec2(1.03,-.403),vec2(1.03,-.403),vec2(1.03,-.415),vec2(1.04,-.415),vec2(1.08,-.415),vec2(1.1,-.409),vec2(1.08,-.403),vec2(1.08,-.403),vec2(1.05,-.398),vec2(1.08,-.392),vec2(1.11,-.403),vec2(1.11,-.415),vec2(1.12,-.415));"
                 "for(int w=0;w<88;++w)"
                   "k=min(k,f(g[2*w],g[2*w+1],d));"
                 "for(int w=0;w<68;++w)"
                   "k=min(k,f(h[3*w],h[3*w+1],h[3*w+2],d));"
                 "Y=mix(Y,.8*m.xxx,o(30.)*smoothstep(.005,.002,k));"
               "}"
   "y=vec4(Y,1.);"
 "}"
 "void main()"
 "{"
   "a(gl_FragColor,gl_FragCoord.xy);"
 "}";

#endif // GFX_H_
